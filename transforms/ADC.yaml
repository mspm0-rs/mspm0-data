# Transform for ADC registers based on ADC0 on G351x (having the most MEMRES/MEMCTL and VRSEL options)
transforms:
  - !DeleteUselessEnums

  # However DeleteUselessEnums does not delete MIS and IMASK (due to CLR being 0 and SET being 1)
  #
  # TODO: Add this to chiptool
  - !DeleteEnumsWithVariants
    variants:
      0: CLR
      1: SET

  - !DeleteEnumsWithVariants
    variants:
      0: CLEARED
      1: SET

  # FREE is useless
  - !DeleteEnumsWithVariants
    variants:
      0: STOP
      1: RUN

  # RESETASSERT is useless
  - !DeleteEnumsWithVariants
    variants:
      0: NOP
      1: ASSERT

  # RESETSTKY is useless
  - !DeleteEnumsWithVariants
    variants:
      0: NORES
      1: RESET

  # RESETSTKYCLR is useless
  - !DeleteEnumsWithVariants
    variants:
      0: NOP
      1: CLR

  # INTEVAL is useless
  - !DeleteEnumsWithVariants
    variants:
      0: DISABLE
      1: EVAL

  # REFBUFRDY is useless
  - !DeleteEnumsWithVariants
    variants:
      0: NOTREADY
      1: READY

  # BUSY is useless
  - !DeleteEnumsWithVariants
    variants:
      0: IDLE
      1: ACTIVE

  # STARTADD enum is useless
  - !DeleteEnums
    from: STARTADD
    soft: false

  # ENDADD enum is useless
  - !DeleteEnums
    from: ENDADD
    soft: false

  # CHANSEL enum is useless
  - !DeleteEnums
    from: CHANSEL
    soft: false

  # AVGD enum is useless
  - !DeleteEnums
    from: AVGD
    soft: false

  # TODO: Something better than a cursed rename as merge
  - !MergeBlocks
    from: ADC0
    main: ADC0
    to: ADC

  # Remove prefixes
  - !RenameRegisters
    block: .*
    from: ADC0_(.+)
    to: $1

  - !RenameFields
    fieldset: .*
    from: ADC0_(.+)
    to: $1

  - !Rename
    type: All
    from: ADC0_(.+)
    to: $1

  ## Interrupts
  ## INT_EVENT0 -> CPU_INT
  - !MergeBlocks
    from: INT_EVENT0
    main: INT_EVENT0
    to: CPU_INT

  - !RenameRegisters
    block: .*
    from: INT_EVENT0(.*)
    to: CPU_INT$1

  - !RenameFields
    fieldset: .*
    from: INT_EVENT0(.+)
    to: CPU_INT$1

  - !Rename
    type: All
    from: INT_EVENT0(.+)
    to: CPU_INT$1

  # These interrupt fields are all the same layout.
  - !MergeFieldsets
    from: CPU_INT_(IMASK|ISET|MIS|RIS|ICLR)
    to: CPU_INT
    check: NoCheck

  # Remove redundant prefixes in the CPU_INT block
  - !RenameRegisters
    block: .*
    from: CPU_INT_(.+)
    to: $1

  - !RenameFields
    fieldset: .*
    from: CPU_INT_(.+)
    to: $1

  ## INT_EVENT1 -> DMA_TRIG_RX
  - !MergeBlocks
    from: INT_EVENT1
    main: INT_EVENT1
    to: GEN_EVENT

  - !RenameRegisters
    block: .*
    from: INT_EVENT1(.*)
    to: GEN_EVENT$1

  - !RenameFields
    fieldset: .*
    from: INT_EVENT1(.+)
    to: GEN_EVENT$1

  - !Rename
    type: All
    from: INT_EVENT1(.+)
    to: GEN_EVENT$1

  # These interrupt fields are all the same layout.
  - !MergeFieldsets
    from: GEN_EVENT_(IMASK|ISET|MIS|RIS|ICLR)
    to: GEN_EVENT
    check: NoCheck

  # Remove redundant prefixes in the DMA_TRIG_RX block
  - !RenameRegisters
    block: .*
    from: GEN_EVENT_(.+)
    to: $1

  - !RenameFields
    fieldset: .*
    from: GEN_EVENT_(.+)
    to: $1

  ## INT_EVENT2 -> DMA_TRIG_TX
  - !MergeBlocks
    from: INT_EVENT2
    main: INT_EVENT2
    to: DMA_TRIG

  - !RenameRegisters
    block: .*
    from: INT_EVENT2(.*)
    to: DMA_TRIG$1

  - !RenameFields
    fieldset: .*
    from: INT_EVENT2(.+)
    to: DMA_TRIG$1

  - !Rename
    type: All
    from: INT_EVENT2(.+)
    to: DMA_TRIG$1

  # These interrupt fields are all the same layout.
  - !MergeFieldsets
    from: DMA_TRIG_(IMASK|ISET|MIS|RIS|ICLR)
    to: DMA_TRIG
    check: NoCheck

  # Remove redundant prefixes in the DMA_TRIG_TX block
  - !RenameRegisters
    block: .*
    from: DMA_TRIG_(.+)
    to: $1

  - !RenameFields
    fieldset: .*
    from: DMA_TRIG_(.+)
    to: $1

  - !MakeFieldArray
    fieldsets: CPU_INT
    from: MEMRESIFG\d+
    to: MEMRESIFG

  - !MakeFieldArray
    fieldsets: DMA_TRIG
    from: MEMRESIFG\d+
    to: MEMRESIFG

  ## Publisher/Subscriber ports
  ## We resize the CHANID because some chips differ which violates the reference manual.
  - !ResizeEnums
    enum: (FSUB_0|FPUB_1)_CHANID
    bit_size: 4

  - !DeleteEnums
    from: (FSUB_0|FPUB_1)_CHANID
    bit_size: 4

  - !MergeFieldsets
    from: (FPUB|FSUB)_\d+
    to: FPORT

  - !RenameRegisters
    block: .*
    from: (FSUB|FPUB)_[0-1]
    to: $1


  ## Some are missing the RSTAMPCAPEN
  - !DeleteFields
    fieldset: CTL2
    from: RSTSAMPCAPEN

  - !AddFields
    fieldset: CTL2
    fields:
    - name: RSTSAMPCAPEN
      description: '0: Sample and hold capacitor is not explicitly discharged at the end of conversion. 1: Sample and hold capacitor is discharged at the end of conversion. This incurs one additional conversion clock cycle.'
      bit_offset: 4
      bit_size: 1

  ## Some chips swapped the ULPCLK and SYSOSC in the SAMPCLK enum
  - !DeleteEnumVariants
    enum: SAMPCLK
    from: (ULPCLK|SYSOSC)

  - !AddEnumVariants
    enum: SAMPCLK
    variants:
    - name: ULPCLK
      description: ULPCLK is the source of ADC sample clock.
      value: 0
    - name: SYSOSC
      description: SYSOSC is the source of ADC sample clock.
      value: 1

  ## Need to add the MEMRES register, for now we use the maximum memres registers (G351x).
  ## This needs to be handled in the ADC HAL.
  - !AddRegisters
    block: ADC
    registers:
    - name: MEMRES
      description: Memory result register.
      array:
        len: 24
        stride: 4
      byte_offset: 4736
      access: Read
      fieldset: MEMRES
  - !Add
    ir:
      fieldset/MEMRES:
        description: MEMRES result register.
        fields:
        - name: DATA
          bit_offset: 0
          bit_size: 16

  ## Add missing keys
  - !AddFields
    fieldset: RSTCTL
    fields:
    - name: KEY
      description: Unlock key B1h = KEY to allow write access to this register
      bit_offset: 24
      bit_size: 8
      enum: RESET_KEY

  - !AddFields
    fieldset: PWREN
    fields:
    - name: KEY
      description: KEY to allow Power State Change 26h = KEY to allow write access to this register
      bit_offset: 24
      bit_size: 8
      enum: PWREN_KEY

  - !AddFields
    fieldset: CLKCFG
    fields:
    - name: KEY
      description: KEY to Allow State Change A9h = KEY to allow write access to this register
      bit_offset: 24
      bit_size: 8
      enum: CLKCFG_KEY

  - !Add
    ir:
      enum/RESET_KEY:
        bit_size: 8
        variants:
          - name: KEY
            value: 177
      enum/PWREN_KEY:
        bit_size: 8
        variants:
          - name: KEY
            value: 38
      enum/CLKCFG_KEY:
        bit_size: 8
        variants:
          - name: KEY
            value: 0xA9

  ## EVT_MODE
  # Merge INTx_CFG enums
  - !MergeEnums
    from: INT(\d+)_CFG
    to: INT_CFG

  # Rename fields to match interrupt names
  - !RenameFields
    fieldset: EVT_MODE
    from: INT0_CFG
    to: CPU
  - !RenameFields
    fieldset: EVT_MODE
    from: INT1_CFG
    to: GEN_EVENT
  - !RenameFields
    fieldset: EVT_MODE
    from: INT2_CFG
    to: DMA_TRIG

  ## Cleanup
  - !Sort
