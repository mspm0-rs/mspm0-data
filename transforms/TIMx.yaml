# Transform for TIMx registers based on TIMA0 on G351x
#
# This generates a generic timer type which is independent of the counter register size.
# Other details such as the following are the responsibility of the HAL:
# - The number of capture and compare channels
# - Whether the QEI
transforms:
  - !DeleteUselessEnums

  # However DeleteUselessEnums does not delete MIS and IMASK (due to CLR being 0 and SET being 1)
  #
  # TODO: Add this to chiptool
  - !DeleteEnumsWithVariants
    variants:
      0: CLR
      1: SET

  - !DeleteFieldsets
    from: .*
    useless: true

  # TODO: Something better than a cursed rename as merge
  - !MergeBlocks
    from: TIMA0
    main: TIMA0
    to: TIM

  # Remove prefixes
  - !RenameRegisters
    block: .*
    from: TIMA0_(.+)
    to: $1

  - !RenameFields
    fieldset: .*
    from: TIMA0_(.+)
    to: $1

  - !Rename
    type: All
    from: TIMA0_(.+)
    to: $1

  ## Interrupts
  # These fields are all the same layout.
  - !MergeFieldsets
    from: (IMASK|ISET|MIS|RIS|ICLR)
    to: INT
    check: NoCheck

  # TIMA0 does not have the QEIERR or DC interrupt fields, manually add these.
  #
  # The QEI is of course only available on general-purpose timers, but we can
  # add these here since interrupts are common to all timer instances. And the HAL
  # is responsible for using the register correctly.
  - !AddFields
    fieldset: INT
    fields:
    - name: DC
      description: Direction change event
      bit_offset: 27
      bit_size: 1
    - name: QEIERR
      description: QEIERR event
      bit_offset: 28
      bit_size: 1
  # However the STAT enum in IIDX contains DC and QEIERR, so no need to add variants.

  ## Publisher/Subscriber ports

  # CHANID is an int
  - !DeleteEnums
    from: .*_CHANID
    bit_size: 4

  - !MergeFieldsets
    from: (FPUB|FSUB)_\d+
    to: FPORT

  - !MakeRegisterArray
    blocks: .*
    from: (FSUB|FPUB)_[0-1]
    to: $1

  # Add missing keys
  - !AddFields
    fieldset: RSTCTL
    fields:
    - name: KEY
      description: Unlock key B1h = KEY to allow write access to this register
      bit_offset: 24
      bit_size: 8
      enum: RESET_KEY

  - !AddFields
    fieldset: PWREN
    fields:
    - name: KEY
      description: KEY to allow Power State Change 26h = KEY to allow write access to this register
      bit_offset: 24
      bit_size: 8
      enum: PWREN_KEY
  
  - !Add
    ir:
      enum/RESET_KEY:
        bit_size: 8
        variants:
          - name: KEY
            value: 177
      enum/PWREN_KEY:
        bit_size: 8
        variants:
          - name: KEY
            value: 38

  # TODO: flatten GPRCM
  # TODO: flatten COUNTERREGS
  # TODO: flatten COMMONREGS

  ## EVT_MODE
  - !MergeEnums
    from: EVT(\d+)_CFG
    to: EVT_CFG

  - !MakeFieldArray
    fieldsets: EVT_MODE
    from: EVT(\d+)_CFG
    to: EVT_CFG

  ## CCPD_C0CCP
  - !MergeEnums
    from: CCPD_C0CCP(\d)
    to: CCPD_C0CCP
    main: CCPD_C0CPP0

  - !MakeFieldArray
    fieldsets: CCPD
    from: C0CCP(\d+)
    to: C0CCP

  ## ODIS
  - !MergeEnums
    from: ODIS_C0CCP(\d)
    to: ODIS_C0CCP
    # Chiptool does not complain if no main is provided?
    main: ODIS_C0CPP0

  - !MakeFieldArray
    fieldsets: ODIS
    from: C0CCP(\d+)
    to: C0CCP

  ## CTTRIG
  # enum/TRIG is useless
  - !DeleteEnums
    from: TRIG

  ## FSCTL
  - !MakeFieldArray
    fieldsets: FSCTL
    from: FAC(\d+)EN
    to: FAC

  - !MakeFieldArray
    fieldsets: FSCTL
    from: FEX(\d+)EN
    to: FEX

  # Add QDIR manually since it only exists in TIMG[8..11] and we generate from TIMA0
  - !Add
    ir:
      fieldset/QDIR:
        fields:
        - name: DIR
          bit_size: 1
          bit_offset: 0

  - !AddRegisters
    block: TIM
    registers:
    - name: QDIR
      byte_offset: 0x18BC
      fieldset: QDIR

  ## COUNTERREGS

  # Delete registers in the COUNTERREGS block which are dependent on the number of bits supported by the timer.
  #
  # The HAL will use an extended variant to handle the bit size.
  - !DeleteRegisters
    block: COUNTERREGS
    from: (CTR|LOAD|(CC_(\d+)))
  
  - !DeleteFieldsets
    from: (CTR|LOAD|(CC_(\d+)))

  # TODO: Would be nice if COUNTERREGS could be merged up into TIM

  # CCCTL
  - !MergeEnums
    from: CCCTL_(\d+)_CCOND
    to: CCTL_CCOND

  - !MergeEnums
    from: CCCTL_(\d+)_ACOND
    to: CCTL_ACOND

  - !MergeEnums
    from: CCCTL_(\d+)_LCOND
    to: CCTL_LCOND

  - !MergeEnums
    from: CCCTL_(\d+)_ZCOND
    to: CCTL_ZCOND

  - !MergeEnums
    from: CCCTL_(\d+)_COC
    to: CCTL_COC

  - !MergeEnums
    from: CCCTL_(\d+)_CCUPD
    to: CCTL_CCUPD

  # Merge CC2SEL enums
  - !RenameEnumVariants
    enum: CCCTL_(\d+)_CC2SEL(U|D)
    from: SEL_CC(U|D)(\d+)
    to: SEL_CC$2

  - !MergeEnums
    from: CCCTL_(\d+)_CC2SEL(U|D)
    to: CCTL_CC2SEL

  # CCTL_CCACTUPD, CCTL_CCUPD are the same
  - !MergeEnums
    from: (CCTL_CCUPD)|(CCCTL_(\d+)_(CCACTUPD))
    to: CCTL_CCUPD

  - !MergeEnums
    from: CCCTL_(\d+)_CC2SELD
    to: CCTL_CC2SELD

  - !MergeFieldsets
    from: CCCTL_(\d+)
    to: CCCTL
    main: CCCTL_01
    # Ignore Layout checks since CCCTL_45 only contains CCUPD and SCERCNZ.
    check: NoCheck

  - !MakeRegisterArray
    blocks: COUNTERREGS
    from: CCCTL_(\d+)
    to: CCCTL

  # OCTL
  - !MergeEnums
    from: OCTL_(\d+)_CCPO
    to: OCTL_CCPO

  - !MergeEnums
    from: OCTL_(\d+)_CCPIV
    to: OCTL_CCPIV

  - !MergeFieldsets
    from: OCTL_(\d+)
    to: OCTL
    main: OCTL_01

  - !MakeRegisterArray
    blocks: COUNTERREGS
    from: OCTL_(\d+)
    to: OCTL

  # CCACT
  - !MergeEnums
    from: CCACT_(\d+)_LACT
    to: CCACT_LACT

  - !MergeEnums
    from: CCACT_(\d+)_ZACT
    to: CCACT_ZACT

  - !MergeEnums
    from: CCACT_(\d+)_CDACT
    to: CCACT_CDACT

  - !MergeEnums
    from: CCACT_(\d+)_CUACT
    to: CCACT_CUACT

  - !MergeEnums
    from: CCACT_(\d+)_CC2DACT
    to: CCACT_CC2DACT

  - !MergeEnums
    from: CCACT_(\d+)_CC2UACT
    to: CCACT_CC2UACT

  - !MergeEnums
    from: CCACT_(\d+)_FENACT
    to: CCACT_FENACT

  - !MergeEnums
    from: CCACT_(\d+)_FEXACT
    to: CCACT_FEXACT

  - !MergeEnums
    from: CCACT_(\d+)_SWFRCACT
    to: CCACT_SWFRCACT

  - !MergeEnums
    from: CCACT_(\d+)_SWFRCACT_CMPL
    to: CCACT_SWFRCACT_CMPL

  - !MergeFieldsets
    from: CCACT_(\d+)
    to: CCACT
    main: CCACT_01

  - !MakeRegisterArray
    blocks: COUNTERREGS
    from: CCACT_(\d+)
    to: CCACT

  # CCACT_(CC2DACT|CC2UACT|CDACT|CUACT|LACT|ZACT) are same
  - !MergeEnums
    from: CCACT_(CC2DACT|CC2UACT|CDACT|CUACT|LACT|ZACT)
    to: CCACT

  # CCACT_(FENACT|FEXACT) are same
  - !MergeEnums
    from: CCACT_(FENACT|FEXACT)
    to: CCACT_F

  # CCACT_(SWFRCACT_CMPL|SWFRCACT) are same
  - !MergeEnums
    from: CCACT_(SWFRCACT_CMPL|SWFRCACT)
    to: CCACT_SWFRCACT

  # CLC, CAC, CZC are same
  - !RenameEnumVariants
    enum: (CLC|CAC|CZC)
    from: CCCTL(\d+)_(\w+)
    to: CCTL$1

  - !MergeEnums
    from: (CLC|CAC|CZC)
    to: CxC

  # IFCTL
  - !MergeEnums
    from: IFCTL_(\d+)_ISEL
    to: IFCTL_ISEL

  - !MergeEnums
    from: IFCTL_(\d+)_FP
    to: IFCTL_FP

  - !MergeEnums
    from: IFCTL_(\d+)_CPV
    to: IFCTL_CPV

  - !MergeFieldsets
    from: IFCTL_(\d+)
    to: IFCTL
    main: IFCTL_01

  - !MakeRegisterArray
    blocks: COUNTERREGS
    from: IFCTL_(\d+)
    to: IFCTL

  # FCTL
  - !MergeEnums
    from: FSENAC(\d+)
    to: FSENAC

  - !MakeFieldArray
    fieldsets: FCTL
    from: FSENAC(\d+)
    to: FSENAC

  - !MergeEnums
    from: FSENEXT(\d+)
    to: FSENEXT

  - !MakeFieldArray
    fieldsets: FCTL
    from: FSENEXT(\d+)
    to: FSENEXT

  # FIFCTL is useless
  - !DeleteEnums
    from: FILTEN

  # Delete enums which are useless but are not registered in chiptool yet
  # RESETASSERT is useless
  - !DeleteEnumsWithVariants
    variants:
      0: NOP
      1: ASSERT

  - !DeleteEnumsWithVariants
    variants:
      0: NORES
      1: RESET

  - !DeleteEnumsWithVariants
    variants:
      0: NOP
      1: CLR

  - !DeleteEnumsWithVariants
    variants:
      0: STOP
      1: RUN

  - !DeleteEnumsWithVariants
    variants:
      0: LOWCTIVE
      1: HIGHACTIVE

  - !DeleteEnumsWithVariants
    variants:
      0: LOW
      1: HIGH

  - !DeleteEnumsWithVariants
    variants:
      0: INPUT
      1: OUTPUT

  ## 16-bit timers
  - !Add
    ir:
      fieldset/CC16:
        description: Capture or Compare Register 0 to Capture or Compare Register (x)
        fields:
        - name: CCVAL
          description: Capture or compare value
          bit_offset: 0
          bit_size: 16
      fieldset/CTR16:
        description: Counter Register
        fields:
        - name: CCTR
          description: Current Counter value
          bit_offset: 0
          bit_size: 16
      fieldset/LOAD16:
        description: Load Register
        fields:
        - name: LD
          description: Load Value
          bit_offset: 0
          bit_size: 16
      block/COUNTERREGS16:
        extends: COUNTERREGS
        items:
        - name: CTR
          description: Counter Register
          byte_offset: 0
          fieldset: CTR16
        - name: LOAD
          description: Load Register
          byte_offset: 8
          fieldset: LOAD16
        - name: CC
          description: Capture or Compare Register (x)
          array:
            len: 6
            stride: 4
          byte_offset: 16
          fieldset: CC16

  ## 32-bit timers
  - !Add
    ir:
      fieldset/CC32:
        description: Capture or Compare Register 0 to Capture or Compare Register (x)
        fields:
        - name: CCVAL
          description: Capture or compare value
          bit_offset: 0
          bit_size: 32
      fieldset/CTR32:
        description: Counter Register
        fields:
        - name: CCTR
          description: Current Counter value
          bit_offset: 0
          bit_size: 32
      fieldset/LOAD32:
        description: Load Register
        fields:
        - name: LD
          description: Load Value
          bit_offset: 0
          bit_size: 32
      block/COUNTERREGS32:
        extends: COUNTERREGS
        items:
        - name: CTR
          description: Counter Register
          byte_offset: 0
          fieldset: CTR32
        - name: LOAD
          description: Load Register
          byte_offset: 8
          fieldset: LOAD32
        - name: CC
          description: Capture or Compare Register (x)
          array:
            len: 6
            stride: 4
          byte_offset: 16
          fieldset: CC32

  ## Cleanup
  - !Sort
