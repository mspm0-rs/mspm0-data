# Transform for WWDTx registers based on WWDT0 on G350x

transforms:
  - !DeleteUselessEnums

  # However DeleteUselessEnums does not delete MIS and IMASK (due to CLR being 0 and SET being 1)
  #
  # TODO: Add this to chiptool
  - !DeleteEnumsWithVariants
    variants:
      0: CLR
      1: SET

  - !DeleteEnumsWithVariants
    variants:
      0: NOP
      1: ASSERT

  - !DeleteEnumsWithVariants
    variants:
      0: NOP
      1: CLR

  # FREE is useless
  - !DeleteEnumsWithVariants
    variants:
      0: STOP
      1: RUN

  # RESETASSERT is useless
  - !DeleteEnumsWithVariants
    variants:
      0: NOP
      1: ASSERT

  # RESETSTKY is useless
  - !DeleteEnumsWithVariants
    variants:
      0: NORES
      1: RESET

  # RESETSTKYCLR is useless
  - !DeleteEnumsWithVariants
    variants:
      0: NOP
      1: CLR

  # TODO: Something better than a cursed rename as merge
  - !MergeBlocks
    from: WWDT0
    main: WWDT0
    to: WWDT

  # Remove prefixes
  - !RenameRegisters
    block: .*
    from: WWDT0_(.+)
    to: $1

  - !RenameFields
    fieldset: .*
    from: WWDT0_(.+)
    to: $1

  - !Rename
    type: All
    from: WWDT0_(.+)
    to: $1

  ## Interrupts
  ## INT_EVENT -> CPU_INT
  - !MergeBlocks
    from: INT_EVENT
    main: INT_EVENT
    to: CPU_INT

  - !RenameRegisters
    block: .*
    from: INT_EVENT(.*)
    to: CPU_INT$1

  - !RenameFields
    fieldset: .*
    from: INT_EVENT(.+)
    to: CPU_INT$1

  - !Rename
    type: All
    from: INT_EVENT(.+)
    to: CPU_INT$1

  ## Interrupts
  # These fields are all the same layout.
  - !MergeFieldsets
    from: (IMASK|ISET|MIS|RIS|ICLR)
    to: INT
    check: NoCheck

  # Rename INT0_CFG, there is only one interrupt
  - !Rename
    type: Enum
    from: INT0_CFG
    to: INT_CFG

  ## WWDTCTL0
  # WINDOW1 and WINDOW2 are same type
  - !MergeEnums
    from: WINDOW(\d+)
    to: WINDOW

  ## Replace int-typed field with enum-typed in WWDTCNTRST.RESTART
  - !DeleteFields
    fieldset: WWDTCNTRST
    from: RESTART

  - !AddFields
    fieldset: WWDTCNTRST
    fields:
    - name: RESTART
      description: Window Watchdog Timer Counter Restart Writing 00A7h to this register restarts the WWDT Counter.
      bit_offset: 0
      bit_size: 32
      enum: WWDTCNTRST_RESTART

  - !Add
    ir:
      enum/WWDTCNTRST_RESTART:
        bit_size: 32
        variants:
          - name: RESTART
            value: 167

  ## Add missing keys
  - !AddFields
    fieldset: RSTCTL
    fields:
    - name: KEY
      description: Unlock key B1h = KEY to allow write access to this register
      bit_offset: 24
      bit_size: 8
      enum: RESET_KEY

  - !AddFields
    fieldset: PWREN
    fields:
    - name: KEY
      description: KEY to allow Power State Change 26h = KEY to allow write access to this register
      bit_offset: 24
      bit_size: 8
      enum: PWREN_KEY

  - !AddFields
    fieldset: WWDTCTL0
    fields:
    - name: KEY
      description: KEY to allow write access to WWDTCTL0 = C9h.
      bit_offset: 24
      bit_size: 8
      enum: WWDTCTL0_KEY

  - !AddFields
    fieldset: WWDTCTL1
    fields:
    - name: KEY
      description: KEY to allow write access to WWDTCTL1 = BEh.
      bit_offset: 24
      bit_size: 8
      enum: WWDTCTL1_KEY

  - !Add
    ir:
      enum/RESET_KEY:
        bit_size: 8
        variants:
          - name: KEY
            value: 177
      enum/PWREN_KEY:
        bit_size: 8
        variants:
          - name: KEY
            value: 38
      enum/WWDTCTL0_KEY:
        bit_size: 8
        variants:
          - name: KEY
            value: 201
      enum/WWDTCTL1_KEY:
        bit_size: 8
        variants:
          - name: KEY
            value: 190

  ## Cleanup
  - !Sort
